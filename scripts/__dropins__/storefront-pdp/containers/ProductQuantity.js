/*! Copyright 2025 Adobe
All Rights Reserved. */
import{jsx as g}from"@dropins/tools/preact-jsx-runtime.js";import{useState as s,useEffect as P}from"@dropins/tools/preact-compat.js";import{classes as y}from"@dropins/tools/lib.js";import{Incrementer as I}from"@dropins/tools/components.js";import{events as i}from"@dropins/tools/event-bus.js";import{n as b,j as q,c as D,o as h}from"../chunks/isProductConfigurationValid.js";import{g as x}from"../chunks/getFetchedProductData.js";import{useText as C}from"@dropins/tools/i18n.js";import"../fragments.js";import"@dropins/tools/fetch-graphql.js";const S=({initialData:m=null,onValue:e,children:U,...n})=>{const c=C("PDP.Product.Incrementer.label").label,[u,l]=s(m),[o,f]=s(()=>b(1));P(()=>{const r=i.on("pdp/data",l),t=i.on("pdp/values",({quantity:a})=>{f(a)},{eager:!0});return()=>{r==null||r.off(),t==null||t.off()}},[]);const p=r=>{const t=parseInt(r,10);q(d=>({...d,quantity:t}));const{persistURLParams:a}=D.getConfig()??{};a&&h({quantity:t}),e==null||e(t)};return u?g(I,{name:"quantity",defaultValue:String(o),value:String(o),min:1,"aria-label":c,onValue:p,...n,className:y(["pdp-quantity",n.className])},"quantity"):null};S.getInitialData=x;export{S as ProductQuantity,S as default};
//# sourceMappingURL=ProductQuantity.js.map
